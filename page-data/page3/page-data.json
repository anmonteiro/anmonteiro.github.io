{"componentChunkName":"component---src-templates-homepage-js","path":"/page3","result":{"data":{"allMarkdownRemark":{"totalCount":31,"edges":[{"node":{"frontmatter":{"title":"Om Next Server-Side Rendering"},"fields":{"title":"Om Next Server-Side Rendering","date":"15 Sep 2016","slug":"/2016/09/om-next-server-side-rendering/"},"excerpt":"<p>Just recently, Om Next added support for server-side rendering. This is a very exciting\naddition, which greatly improves Om's fullstack story, making it possible to add\nconsiderable performance improvements to your app's initial render.</p>\n"}},{"node":{"frontmatter":{"title":"Om Next at Full Stack Fest 2016"},"fields":{"title":"Om Next at Full Stack Fest 2016","date":"14 Sep 2016","slug":"/2016/09/om-next-at-full-stack-fest-2016/"},"excerpt":"<p>On the 6th of September, I had the pleasure to speak at <a href=\"https://2016.fullstackfest.com/\">Full Stack Fest 2016</a>\nin Barcelona. The talk has been recorded and you can find a link to the video below.</p>\n"}},{"node":{"frontmatter":{"title":"Om Next and Bootstrapped ClojureScript"},"fields":{"title":"Om Next and Bootstrapped ClojureScript","date":"24 Aug 2016","slug":"/2016/08/om-next-and-bootstrapped-clojurescript/"},"excerpt":"<p>A small number of changes to Om Next makes it possible to use it from self-hosted\nClojureScript environments. Read on!</p>\n"}},{"node":{"frontmatter":{"title":"ClojureScript `require` now supports `:rename`"},"fields":{"title":"ClojureScript `require` now supports `:rename`","date":"10 Aug 2016","slug":"/2016/08/clojurescript-require-now-supports-rename/"},"excerpt":"<p>There exist a <a href=\"https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure\">number of differences</a> between Clojure and ClojureScript, especially concerning <a href=\"https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure#namespaces\">namespace declarations</a> and <code class=\"language-text\">require</code> specifications. Some of these differences have recently been addressed with the introduction of <a href=\"http://blog.fikesfarm.com/posts/2016-07-03-clojurescript-clojure-namespace-aliasing.html\">Clojure namespace aliasing</a> (<a href=\"http://dev.clojure.org/jira/browse/CLJS-1692\">JIRA ticket</a>) and <a href=\"http://dev.clojure.org/jira/browse/CLJS-1507\">implicit macro loading</a>. A further upcoming enhancement introduces the possibility to <code class=\"language-text\">:rename</code> referred symbols in dependency specifications.</p>\n"}},{"node":{"frontmatter":{"title":"The quest for a unified routing solution in Om Next"},"fields":{"title":"The quest for a unified routing solution in Om Next","date":"12 Jun 2016","slug":"/2016/06/the-quest-for-a-unified-routing-solution-in-om-next/"},"excerpt":"<p>There are several different options to implement routing in an Om Next application. However, any  one of those approaches is not straightforward to accomplish, and often requires more time than one would like to get right. Until now.</p>\n"}}]}},"pageContext":{"limit":5,"skip":10,"index":3,"first":false,"last":false}},"staticQueryHashes":["3074767223","4056790316"]}