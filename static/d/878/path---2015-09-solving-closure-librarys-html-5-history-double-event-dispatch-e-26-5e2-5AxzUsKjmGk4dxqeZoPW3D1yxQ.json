{"data":{"markdownRemark":{"excerpt":"\nMost Clojurescript apps that rely on browser routing are wired in some manner to either the Google Closure Library's [HTML5 History](https://closure-library.googlecode.com/git-history/docs/class_goog_history_Html5History.html) module or - in an increasingly lower number of cases - the [History](https://closure-library.googlecode.com/git-history/docs/class_goog_History.html) module. While both [`pushState`](https://developer.mozilla.org/en-US/docs/Web/API/History_API)- and [fragment](https://en.wikipedia.org/wiki/Fragment_identifier)-based routing are supported, the module always dispatches two navigation events when opting for the latter, which can become a source of unexpected behavior. Here's how to fix it.\n\n","html":"<p>Most Clojurescript apps that rely on browser routing are wired in some manner to either the Google Closure Library's <a href=\"https://closure-library.googlecode.com/git-history/docs/class_goog_history_Html5History.html\">HTML5 History</a> module or - in an increasingly lower number of cases - the <a href=\"https://closure-library.googlecode.com/git-history/docs/class_goog_History.html\">History</a> module. While both <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\"><code class=\"language-text\">pushState</code></a>- and <a href=\"https://en.wikipedia.org/wiki/Fragment_identifier\">fragment</a>-based routing are supported, the module always dispatches two navigation events when opting for the latter, which can become a source of unexpected behavior. Here's how to fix it.</p>\n<!--more-->\n<h3>Understanding the problem</h3>\n<p>Opting for the hash based routing approach with Google Closure's Html5history module can be done with the following (simplistic) Clojurescript code:</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token comment\">;; instantiate an Html5History object</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>history <span class=\"token punctuation\">(</span>goog.history.Html5History.<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">;; listen for navigation events</span>\n  <span class=\"token punctuation\">(</span>goog.events/listen history\n                      goog.history.EventType.NAVIGATE\n                      #<span class=\"token punctuation\">(</span>.log js/console <span class=\"token string\">\"Navigate event fired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">;; opt for fragment routing and start using the module</span>\n  <span class=\"token comment\">;; also returns the instance for practical purposes</span>\n  <span class=\"token comment\">;; (e.g. for use in a function)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">doto</span> history\n    <span class=\"token punctuation\">(</span>.setUseFragment <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span>.setEnabled <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Inspecting the (used above) <a href=\"https://github.com/google/closure-library/blob/master/closure/goog/history/html5history.js#L203\"><code class=\"language-text\">setUseFragment</code></a> function internals reveals the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useFragment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  goog<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>window_<span class=\"token punctuation\">,</span> goog<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span>EventType<span class=\"token punctuation\">.</span><span class=\"token constant\">HASHCHANGE</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onHistoryEvent_<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      goog<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">unlisten</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>window_<span class=\"token punctuation\">,</span> goog<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span>EventType<span class=\"token punctuation\">.</span><span class=\"token constant\">HASHCHANGE</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onHistoryEvent_<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>However, looking at the <a href=\"https://github.com/google/closure-library/blob/master/closure/goog/history/html5history.js#L76\">object instantiation</a> we see that the module also listens for the <code class=\"language-text\">goog.events.EventType.POPSTATE</code> event. On browsers that don't support the <a href=\"http://caniuse.com/#search=pushstate\"><code class=\"language-text\">pushState</code> API</a> this represents absolutely no problem, since one should use <code class=\"language-text\">goog.History</code> instead of <code class=\"language-text\">goog.History.Html5History</code> anyway. But on browsers in which pushState is supported, we end up receiving two <code class=\"language-text\">NAVIGATE</code> events. This can easily become the root of unexpected behavior.</p>\n<h3>Applying a solution</h3>\n<p>Since our focus is on using fragment routing, we don't really need to be listening to the <code class=\"language-text\">popstate</code> browser event. On the other hand, we want to preserve <code class=\"language-text\">popstate</code> behavior in case we switch to the <code class=\"language-text\">pushState</code> API routing. To tackle this, I use the following approach:</p>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\"><span class=\"token comment\">;; only remove popstate event listener when using</span>\n<span class=\"token comment\">;; fragment based routing</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>.-useFragment_ history<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span>events/unlisten <span class=\"token punctuation\">(</span>.-window_ history<span class=\"token punctuation\">)</span>\n                     goog.events.EventType.POPSTATE\n                     <span class=\"token punctuation\">(</span>.-onHistoryEvent_ history<span class=\"token punctuation\">)</span>\n                     <span class=\"token boolean\">false</span>\n                     history<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>It allows to unsubscribe from <code class=\"language-text\">popstate</code> events while still preserving that behavior when not using fragments.</p>\n<p>If you've got any feedback, don't hesitate to <a href=\"https://twitter.com/%7B%7B%20site.author.twitter_username%20%7D%7D\">contact me</a> or post in the comments below. Happy coding!</p>","fields":{"title":"Solving Closure Library's Html5history double event dispatch","date":"11 Sep 2015","tags":["clojure","clojurescript"],"slug":"/2015/09/solving-closure-librarys-html5history-double-event-dispatch/","url":"https://anmonteiro.com/2015/09/solving-closure-librarys-html5history-double-event-dispatch/"}},"allPosts":{"edges":[{"node":{"fields":{"title":"On OCaml and the JS platform","slug":"/2021/12/on-ocaml-and-the-js-platform/","tags":["reason","ocaml","rescript"],"date":"11 Dec 2021"}}},{"node":{"fields":{"title":"Reason and the Language Server Protocol: The Landscape","slug":"/2018/11/reason-and-the-language-server-protocol-the-landscape/","tags":["reason","ocaml","emacs","editors"],"date":"17 Nov 2018"}}},{"node":{"fields":{"title":"The State of ClojureScript Compilation in Lumo","slug":"/2017/09/the-state-of-clojurescript-compilation-in-lumo/","tags":["clojure","clojurescript","lumo"],"date":"19 Sep 2017"}}},{"node":{"fields":{"title":"Shipping a (very simplistic) ReasonReact app","slug":"/2017/08/shipping-a-very-simplistic-reasonreact-app/","tags":["reason","ocaml"],"date":"20 Aug 2017"}}},{"node":{"fields":{"title":"On Lumo's Growth and Sustainability","slug":"/2017/05/on-lumos-growth-and-sustainability/","tags":["clojure","clojurescript","lumo"],"date":"01 May 2017"}}},{"node":{"fields":{"title":"Requiring Node.js modules from ClojureScript namespaces","slug":"/2017/03/requiring-node-js-modules-from-clojurescript-namespaces/","tags":["clojure","clojurescript","node","nodejs"],"date":"17 Mar 2017"}}},{"node":{"fields":{"title":"Compiling ClojureScript Projects Without the JVM","slug":"/2017/02/compiling-clojurescript-projects-without-the-jvm/","tags":["clojure","clojurescript","lumo"],"date":"21 Feb 2017"}}},{"node":{"fields":{"title":"The fastest Clojure REPL in the world","slug":"/2016/11/the-fastest-clojure-repl-in-the-world/","tags":["clojure","clojurescript","lumo"],"date":"09 Nov 2016"}}},{"node":{"fields":{"title":"ClojureScript `require` outside `ns`","slug":"/2016/10/clojurescript-require-outside-ns/","tags":["clojure","clojurescript"],"date":"02 Oct 2016"}}},{"node":{"fields":{"title":"Om Next internals: Incremental Rendering","slug":"/2016/09/om-next-internals-incremental-rendering/","tags":["clojure","clojurescript","om"],"date":"29 Sep 2016"}}},{"node":{"fields":{"title":"Om Next Server-Side Rendering","slug":"/2016/09/om-next-server-side-rendering/","tags":["clojure","clojurescript","om"],"date":"15 Sep 2016"}}},{"node":{"fields":{"title":"Om Next at Full Stack Fest 2016","slug":"/2016/09/om-next-at-full-stack-fest-2016/","tags":["talks","clojure","clojurescript","om"],"date":"14 Sep 2016"}}},{"node":{"fields":{"title":"Om Next and Bootstrapped ClojureScript","slug":"/2016/08/om-next-and-bootstrapped-clojurescript/","tags":["clojure","clojurescript","om"],"date":"24 Aug 2016"}}},{"node":{"fields":{"title":"ClojureScript `require` now supports `:rename`","slug":"/2016/08/clojurescript-require-now-supports-rename/","tags":["clojure","clojurescript"],"date":"10 Aug 2016"}}},{"node":{"fields":{"title":"The quest for a unified routing solution in Om Next","slug":"/2016/06/the-quest-for-a-unified-routing-solution-in-om-next/","tags":["clojure","clojurescript","om"],"date":"12 Jun 2016"}}},{"node":{"fields":{"title":"&apos;Clients in control&apos; — Om Next at Craft Conference 2016","slug":"/2016/05/clients-in-control-om-next-craft-conf-2016/","tags":["talks","clojure","clojurescript","om"],"date":"14 May 2016"}}},{"node":{"fields":{"title":"Routing in Om Next — a Catalog of Approaches","slug":"/2016/02/routing-in-om-next-a-catalog-of-approaches/","tags":["clojure","clojurescript","om"],"date":"22 Feb 2016"}}},{"node":{"fields":{"title":"Om Next meets Devcards — the full reloadable experience","slug":"/2016/02/om-next-meets-devcards-the-full-reloadable-experience/","tags":["clojure","clojurescript","om"],"date":"01 Feb 2016"}}},{"node":{"fields":{"title":"Writing Om Next Reloadable Code — A Checklist","slug":"/2016/01/writing-om-next-reloadable-code-a-checklist/","tags":["clojure","clojurescript","om"],"date":"21 Jan 2016"}}},{"node":{"fields":{"title":"An Exploration of Object Recursion Design Patterns with Om Next Recursive Queries - Part 2","slug":"/2016/01/exploration-patterns-om-next-part-2/","tags":["clojure","clojurescript","om"],"date":"09 Jan 2016"}}},{"node":{"fields":{"title":"An Exploration of Object Recursion Design Patterns with Om Next Recursive Queries - Part 1","slug":"/2016/01/exploration-patterns-om-next-part-1/","tags":["clojure","clojurescript","om"],"date":"07 Jan 2016"}}},{"node":{"fields":{"title":"Om Next Query Syntax Explained","slug":"/2016/01/om-next-query-syntax/","tags":["clojure","clojurescript","om"],"date":"04 Jan 2016"}}},{"node":{"fields":{"title":"Om Next Study Material","slug":"/2015/12/om-next-study-material/","tags":["clojure","clojurescript","om"],"date":"10 Dec 2015"}}},{"node":{"fields":{"title":"clj-isitup - a simple isitup.org API client","slug":"/2015/11/clj-isitup-a-simple-isitup-org-api-client/","tags":["clojure"],"date":"17 Nov 2015"}}},{"node":{"fields":{"title":"Hosting files on the cloud via GitHub Issues","slug":"/2015/09/hosting-files-on-the-cloud-via-github-issues/","tags":["git","GitHub"],"date":"26 Sep 2015"}}},{"node":{"fields":{"title":"Solving Closure Library's Html5history double event dispatch","slug":"/2015/09/solving-closure-librarys-html5history-double-event-dispatch/","tags":["clojure","clojurescript"],"date":"11 Sep 2015"}}},{"node":{"fields":{"title":"Setting up Heroku config variables with Clojure","slug":"/2015/09/setting-up-heroku-config-variables-with-clojure/","tags":["clojure","heroku"],"date":"03 Sep 2015"}}},{"node":{"fields":{"title":"Jekyll related posts revamped","slug":"/2015/08/jekyll-related-posts-revamped/","tags":["jekyll"],"date":"29 Aug 2015"}}},{"node":{"fields":{"title":"Custom subdomains in GitHub project pages","slug":"/2015/08/custom-subdomains-in-github-project-pages/","tags":["git","GitHub"],"date":"24 Aug 2015"}}},{"node":{"fields":{"title":"Grand opening","slug":"/2015/08/grand-opening/","tags":["lifestyle"],"date":"18 Aug 2015"}}},{"node":{"fields":{"title":"On OCaml and the JS platform","slug":"/2021/12/on-ocaml-and-the-js-platform/","tags":["reason","ocaml","rescript"],"date":"12 Dec 2021"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2015/09/solving-closure-librarys-html5history-double-event-dispatch/"}}