{"data":{"markdownRemark":{"excerpt":"\nThere exist a [number of differences](https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure) between Clojure and ClojureScript, especially concerning [namespace declarations](https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure#namespaces) and `require` specifications. Some of these differences have recently been addressed with the introduction of [Clojure namespace aliasing](http://blog.fikesfarm.com/posts/2016-07-03-clojurescript-clojure-namespace-aliasing.html) ([JIRA ticket](http://dev.clojure.org/jira/browse/CLJS-1692)) and [implicit macro loading](http://dev.clojure.org/jira/browse/CLJS-1507). A further upcoming enhancement introduces the possibility to `:rename` referred symbols in dependency specifications.\n\n\n","html":"<p>There exist a <a href=\"https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure\">number of differences</a> between Clojure and ClojureScript, especially concerning <a href=\"https://github.com/clojure/clojurescript/wiki/Differences-from-Clojure#namespaces\">namespace declarations</a> and <code class=\"language-text\">require</code> specifications. Some of these differences have recently been addressed with the introduction of <a href=\"http://blog.fikesfarm.com/posts/2016-07-03-clojurescript-clojure-namespace-aliasing.html\">Clojure namespace aliasing</a> (<a href=\"http://dev.clojure.org/jira/browse/CLJS-1692\">JIRA ticket</a>) and <a href=\"http://dev.clojure.org/jira/browse/CLJS-1507\">implicit macro loading</a>. A further upcoming enhancement introduces the possibility to <code class=\"language-text\">:rename</code> referred symbols in dependency specifications.</p>\n<!--more-->\n<div style=\"margin:20px\">\n  <img style=\"margin:0 auto\" src=\"https://cloud.githubusercontent.com/assets/661909/17553842/d9429ecc-5eff-11e6-97b2-08fe95d4fef5.jpg\">\n</div>\n<p>Starting with the next version of Clojurescript, we'll be <a href=\"http://dev.clojure.org/jira/browse/CLJS-1508\">able to use the <code class=\"language-text\">:rename</code> option</a> when requiring dependencies. As with Clojure, <code class=\"language-text\">:rename</code> can be used under <code class=\"language-text\">:require</code>, <code class=\"language-text\">:use</code> and <code class=\"language-text\">:refer-clojure</code>. The following examples take us through the basics of how using <code class=\"language-text\">:rename</code> looks like in practice.</p>\n<ul>\n<li>In <code class=\"language-text\">require</code> specifications, we can <code class=\"language-text\">:rename</code> referred symbols:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\">cljs.user=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span>require '<span class=\"token punctuation\">[</span>clojure.<span class=\"token keyword\">set</span> <span class=\"token operator\">:refer</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">intersection</span><span class=\"token punctuation\">]</span>\n       #_=<span class=\"token keyword\">></span>                        <span class=\"token operator\">:rename</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">intersection</span> foo<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">nil</span>\ncljs.user=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span>foo #<span class=\"token punctuation\">{</span><span class=\"token number\">1</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span> #<span class=\"token punctuation\">{</span><span class=\"token number\">2</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n#<span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Such is the case with <code class=\"language-text\">:use</code>. It is possible to <code class=\"language-text\">:rename</code> symbols referred with <code class=\"language-text\">:only</code>:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\">cljs.user=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ns</span> foo.core\n       #_=<span class=\"token keyword\">></span>   <span class=\"token punctuation\">(</span><span class=\"token operator\">:use</span> <span class=\"token punctuation\">[</span>clojure.string <span class=\"token operator\">:only</span> <span class=\"token punctuation\">[</span>lower-case<span class=\"token punctuation\">]</span>\n       #_=<span class=\"token keyword\">></span>                         <span class=\"token operator\">:rename</span> <span class=\"token punctuation\">{</span>lower-case lc<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">nil</span>\nfoo.core=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span>lc <span class=\"token string\">\"FOO\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"foo\"</span></code></pre></div>\n<ul>\n<li>In <code class=\"language-text\">:refer-clojure</code>, <code class=\"language-text\">:rename</code> can be used with or without <code class=\"language-text\">:excludes</code>:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"clojure\"><pre class=\"language-clojure\"><code class=\"language-clojure\">cljs.user=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">ns</span> foo.core\n      #_ <span class=\"token keyword\">=</span>>   <span class=\"token punctuation\">(</span><span class=\"token operator\">:refer-clojure</span> <span class=\"token operator\">:rename</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">map</span> core-map<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">nil</span>\nfoo.core=<span class=\"token keyword\">></span> <span class=\"token punctuation\">(</span>core-map <span class=\"token keyword\">inc</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>At the time of this writing, this enhancement is currently unreleased. However, you can try it out in two ways:</p>\n<ol>\n<li>\n<p><a href=\"https://github.com/clojure/clojurescript/wiki/Building-the-compiler\">build the ClojureScript compiler</a> from master, or</p>\n</li>\n<li>\n<p><a href=\"https://github.com/mfikes/planck#building\">build</a> the <a href=\"http://planck-repl.org/\">Planck</a> bootstrapped REPL â€” <a href=\"https://twitter.com/mfikes\">Mike Fikes</a> has promptly updated the repository to use the ClojureScript commit that includes support for <code class=\"language-text\">:rename</code>.</p>\n</li>\n</ol>\n<p>\n  <span style=\"font-weight:bold\">Note:</span> This feature is now part of ClojureScript releases since version 1.9.183.\n</p>\n<h3>Parting thoughts</h3>\n<p>While there will always exist differences between Clojure and ClojureScript, this enhancement further narrows that gap and eases code portability between the two platforms.</p>\n<p>Thanks for reading!</p>","fields":{"title":"ClojureScript `require` now supports `:rename`","date":"10 Aug 2016","tags":["clojure","clojurescript"],"slug":"/2016/08/clojurescript-require-now-supports-rename/","url":"https://anmonteiro.com/2016/08/clojurescript-require-now-supports-rename/"}},"allPosts":{"edges":[{"node":{"fields":{"title":"On OCaml and the JS platform","slug":"/2021/12/on-ocaml-and-the-js-platform/","tags":["reason","ocaml","rescript"],"date":"11 Dec 2021"}}},{"node":{"fields":{"title":"Reason and the Language Server Protocol: The Landscape","slug":"/2018/11/reason-and-the-language-server-protocol-the-landscape/","tags":["reason","ocaml","emacs","editors"],"date":"17 Nov 2018"}}},{"node":{"fields":{"title":"The State of ClojureScript Compilation in Lumo","slug":"/2017/09/the-state-of-clojurescript-compilation-in-lumo/","tags":["clojure","clojurescript","lumo"],"date":"19 Sep 2017"}}},{"node":{"fields":{"title":"Shipping a (very simplistic) ReasonReact app","slug":"/2017/08/shipping-a-very-simplistic-reasonreact-app/","tags":["reason","ocaml"],"date":"20 Aug 2017"}}},{"node":{"fields":{"title":"On Lumo's Growth and Sustainability","slug":"/2017/05/on-lumos-growth-and-sustainability/","tags":["clojure","clojurescript","lumo"],"date":"01 May 2017"}}},{"node":{"fields":{"title":"Requiring Node.js modules from ClojureScript namespaces","slug":"/2017/03/requiring-node-js-modules-from-clojurescript-namespaces/","tags":["clojure","clojurescript","node","nodejs"],"date":"17 Mar 2017"}}},{"node":{"fields":{"title":"Compiling ClojureScript Projects Without the JVM","slug":"/2017/02/compiling-clojurescript-projects-without-the-jvm/","tags":["clojure","clojurescript","lumo"],"date":"21 Feb 2017"}}},{"node":{"fields":{"title":"The fastest Clojure REPL in the world","slug":"/2016/11/the-fastest-clojure-repl-in-the-world/","tags":["clojure","clojurescript","lumo"],"date":"09 Nov 2016"}}},{"node":{"fields":{"title":"ClojureScript `require` outside `ns`","slug":"/2016/10/clojurescript-require-outside-ns/","tags":["clojure","clojurescript"],"date":"02 Oct 2016"}}},{"node":{"fields":{"title":"Om Next internals: Incremental Rendering","slug":"/2016/09/om-next-internals-incremental-rendering/","tags":["clojure","clojurescript","om"],"date":"29 Sep 2016"}}},{"node":{"fields":{"title":"Om Next Server-Side Rendering","slug":"/2016/09/om-next-server-side-rendering/","tags":["clojure","clojurescript","om"],"date":"15 Sep 2016"}}},{"node":{"fields":{"title":"Om Next at Full Stack Fest 2016","slug":"/2016/09/om-next-at-full-stack-fest-2016/","tags":["talks","clojure","clojurescript","om"],"date":"14 Sep 2016"}}},{"node":{"fields":{"title":"Om Next and Bootstrapped ClojureScript","slug":"/2016/08/om-next-and-bootstrapped-clojurescript/","tags":["clojure","clojurescript","om"],"date":"24 Aug 2016"}}},{"node":{"fields":{"title":"ClojureScript `require` now supports `:rename`","slug":"/2016/08/clojurescript-require-now-supports-rename/","tags":["clojure","clojurescript"],"date":"10 Aug 2016"}}},{"node":{"fields":{"title":"The quest for a unified routing solution in Om Next","slug":"/2016/06/the-quest-for-a-unified-routing-solution-in-om-next/","tags":["clojure","clojurescript","om"],"date":"12 Jun 2016"}}},{"node":{"fields":{"title":"&apos;Clients in control&apos; â€” Om Next at Craft Conference 2016","slug":"/2016/05/clients-in-control-om-next-craft-conf-2016/","tags":["talks","clojure","clojurescript","om"],"date":"14 May 2016"}}},{"node":{"fields":{"title":"Routing in Om Next â€” a Catalog of Approaches","slug":"/2016/02/routing-in-om-next-a-catalog-of-approaches/","tags":["clojure","clojurescript","om"],"date":"22 Feb 2016"}}},{"node":{"fields":{"title":"Om Next meets Devcards â€” the full reloadable experience","slug":"/2016/02/om-next-meets-devcards-the-full-reloadable-experience/","tags":["clojure","clojurescript","om"],"date":"01 Feb 2016"}}},{"node":{"fields":{"title":"Writing Om Next Reloadable Code â€” A Checklist","slug":"/2016/01/writing-om-next-reloadable-code-a-checklist/","tags":["clojure","clojurescript","om"],"date":"21 Jan 2016"}}},{"node":{"fields":{"title":"An Exploration of Object Recursion Design Patterns with Om Next Recursive Queries - Part 2","slug":"/2016/01/exploration-patterns-om-next-part-2/","tags":["clojure","clojurescript","om"],"date":"09 Jan 2016"}}},{"node":{"fields":{"title":"An Exploration of Object Recursion Design Patterns with Om Next Recursive Queries - Part 1","slug":"/2016/01/exploration-patterns-om-next-part-1/","tags":["clojure","clojurescript","om"],"date":"07 Jan 2016"}}},{"node":{"fields":{"title":"Om Next Query Syntax Explained","slug":"/2016/01/om-next-query-syntax/","tags":["clojure","clojurescript","om"],"date":"04 Jan 2016"}}},{"node":{"fields":{"title":"Om Next Study Material","slug":"/2015/12/om-next-study-material/","tags":["clojure","clojurescript","om"],"date":"10 Dec 2015"}}},{"node":{"fields":{"title":"clj-isitup - a simple isitup.org API client","slug":"/2015/11/clj-isitup-a-simple-isitup-org-api-client/","tags":["clojure"],"date":"17 Nov 2015"}}},{"node":{"fields":{"title":"Hosting files on the cloud via GitHub Issues","slug":"/2015/09/hosting-files-on-the-cloud-via-github-issues/","tags":["git","GitHub"],"date":"26 Sep 2015"}}},{"node":{"fields":{"title":"Solving Closure Library's Html5history double event dispatch","slug":"/2015/09/solving-closure-librarys-html5history-double-event-dispatch/","tags":["clojure","clojurescript"],"date":"11 Sep 2015"}}},{"node":{"fields":{"title":"Setting up Heroku config variables with Clojure","slug":"/2015/09/setting-up-heroku-config-variables-with-clojure/","tags":["clojure","heroku"],"date":"03 Sep 2015"}}},{"node":{"fields":{"title":"Jekyll related posts revamped","slug":"/2015/08/jekyll-related-posts-revamped/","tags":["jekyll"],"date":"29 Aug 2015"}}},{"node":{"fields":{"title":"Custom subdomains in GitHub project pages","slug":"/2015/08/custom-subdomains-in-github-project-pages/","tags":["git","GitHub"],"date":"24 Aug 2015"}}},{"node":{"fields":{"title":"Grand opening","slug":"/2015/08/grand-opening/","tags":["lifestyle"],"date":"18 Aug 2015"}}},{"node":{"fields":{"title":"On OCaml and the JS platform","slug":"/2021/12/on-ocaml-and-the-js-platform/","tags":["reason","ocaml","rescript"],"date":"12 Dec 2021"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016/08/clojurescript-require-now-supports-rename/"}}