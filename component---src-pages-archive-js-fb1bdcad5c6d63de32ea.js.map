{"version":3,"sources":["webpack://anmonteiro.com/./src/pages/archive.js"],"names":["data","location","year","postsPerYear","allPosts","edges","reduce","acc","node","postYear","moment","fields","date","push","length","pageData","url","pathname","className","map","posts","idx","key","style","fontWeight","post","to","slug","title"],"mappings":"mMA4BA,mBAAe,GAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAO,KACLC,EAAeH,EAAKI,SAASC,MAAMC,QAAO,SAACC,EAAD,GAAoB,IAAZC,EAAW,EAAXA,KAChDC,EAAWC,IAAOF,EAAKG,OAAOC,KAAM,eAAeV,OAQzD,OAPIO,IAAaP,GACfA,EAAOO,EACPF,EAAIM,KAAK,CAACL,KAEVD,EAAIA,EAAIO,OAAS,GAAGD,KAAKL,GAGpBD,IACN,IAEH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKQ,SAAU,CAAEC,IAAKf,EAASgB,YAC/B,yBAAKC,UAAU,QACb,wBAAIA,UAAU,cAAd,WACCf,EAAagB,KAAI,SAACC,EAAOC,GACxB,IAAMnB,EAAOQ,IAAOU,EAAM,GAAGT,OAAOC,KAAM,eAAeV,OAEzD,OACE,kBAAC,aAAD,CAAgBoB,IAAKD,GACnB,wBAAIE,MAAO,CAAEC,WAAY,SAAWtB,GACpC,wBAAIgB,UAAU,gBACXE,EAAMD,KAAI,SAACM,EAAMJ,GAAP,OACT,wBAAIC,IAAKD,GACP,0BAAMH,UAAU,aAAaO,EAAKd,OAAOC,MACxC,MACD,kBAAC,KAAD,CAAMc,GAAID,EAAKd,OAAOgB,MAAOF,EAAKd,OAAOiB","file":"component---src-pages-archive-js-fb1bdcad5c6d63de32ea.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport moment from 'moment';\n\nexport const query = graphql`\n  {\n    allPosts: allMarkdownRemark(\n      sort: { fields: [fileAbsolutePath], order: DESC }\n      filter: { frontmatter: { layout: { eq: \"post\" } } }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            title\n            slug\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data, location }) => {\n  let year = null;\n  const postsPerYear = data.allPosts.edges.reduce((acc, { node }) => {\n    const postYear = moment(node.fields.date, 'DD MMM YYYY').year();\n    if (postYear !== year) {\n      year = postYear;\n      acc.push([node]);\n    } else {\n      acc[acc.length - 1].push(node);\n    }\n\n    return acc;\n  }, []);\n\n  return (\n    <Layout>\n      <SEO pageData={{ url: location.pathname }} />\n      <div className='page'>\n        <h1 className='page-title'>Archive</h1>\n        {postsPerYear.map((posts, idx) => {\n          const year = moment(posts[0].fields.date, 'DD MMM YYYY').year();\n\n          return (\n            <React.Fragment key={idx}>\n              <h2 style={{ fontWeight: 'bold' }}>{year}</h2>\n              <ul className='archive-year'>\n                {posts.map((post, idx) => (\n                  <li key={idx}>\n                    <span className='item-date'>{post.fields.date}</span>\n                    {' Â» '}\n                    <Link to={post.fields.slug}>{post.fields.title}</Link>\n                  </li>\n                ))}\n              </ul>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}