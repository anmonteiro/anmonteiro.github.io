{"version":3,"sources":["webpack://anmonteiro.com/./src/templates/post.js"],"names":["TwitterPlug","tags","useScriptTag","style","marginTop","marginBottom","href","join","className","data-via","data-show-count","Disqus","url","identifierParts","slug","split","filter","x","identifier","length","id","rel","RelatedPosts","allPosts","currentPost","relatedPosts","allPostsLength","i","post","node","fields","some","tag","indexOf","push","map","idx","title","date","key","to","data","markdownRemark","pageData","dangerouslySetInnerHTML","__html","html","edges"],"mappings":"0LAOA,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAKrB,OAJAC,OAAa,0RAKX,yBAAKC,MAAO,CAAEC,UAAW,OAAQC,aAAc,SAC7C,uBACEC,KAAI,sCAAwCL,EAAKM,KAAK,KACtDC,UAAU,uBACVC,WAAS,eAHX,SAOA,uBACEH,KAAK,kCACLE,UAAU,wBACVE,kBAAgB,SAHlB,wBAWN,SAASC,EAAT,GAAgC,IAAdC,EAAa,EAAbA,IACVC,EADuB,EAARC,KACQC,MAAM,KAAKC,QAAO,SAAAC,GAAC,MAAU,KAANA,KAC9CC,EAAaL,EAAgBA,EAAgBM,OAAS,GAAGJ,MAAM,KAAK,GAe1E,OAdAb,OAAa,iEAEUU,EAFX,qCAGkBM,EAHlB,+WAeV,yBAAKE,GAAG,iBACN,yEACuC,IACrC,uBAAGd,KAAK,mCAAmCe,IAAI,YAA/C,iCA2DR,SAASC,EAAT,GAGE,IAHgD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC1BC,EAAe,GACfC,EAAiBH,EAASJ,OACvBQ,EAAI,EAAGA,EAAID,GACU,IAAxBD,EAAaN,OADiBQ,IAAK,CAIvC,IAAMC,EAAOL,EAASI,GAAGE,KACRD,EAAKE,OAAd7B,KACC8B,MAAK,SAAAC,GAAG,OAA8C,IAA1CR,EAAYM,OAAO7B,KAAKgC,QAAQD,OACnDP,EAAaS,KAAKN,GAItB,GAAIH,EAAaN,OAAS,EACxB,IAD4B,IAAD,WAClBQ,GACP,GAA4B,IAAxBF,EAAaN,OACf,cAEF,IAAMS,EAAOL,EAASI,GAAGE,KACjBf,EAASc,EAAKE,OAAdhB,KACHW,EAAaM,MAAK,SAAAH,GAAI,OAAIA,EAAKE,OAAOhB,OAASA,MAClDW,EAAaS,KAAKN,IAPbD,EAAI,EAAGA,EAAID,EAAgBC,IAAK,gBAAhCA,GAEL,MAUN,OACE,yBAAKnB,UAAU,WACb,6CACA,wBAAIA,UAAU,iBACXiB,EAAaU,KAAI,SAACP,EAAMQ,GAAS,IAAD,EACDR,EAAKE,OAA3BO,EADuB,EACvBA,MAAOvB,EADgB,EAChBA,KAAMwB,EADU,EACVA,KACrB,OACE,wBAAIC,IAAKH,GACP,4BACE,kBAAC,KAAD,CAAMI,GAAI1B,GACPuB,EADH,IACU,+BAAQC,WAvDlC,mBAAe,GAAe,IAAZG,EAAW,EAAXA,KACVb,EAAOa,EAAKC,eACVnB,EAAakB,EAAblB,SACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoB,SAAUf,IACf,yBAAKpB,UAAU,QACb,wBAAIA,UAAU,cAAcoB,EAAKE,OAAOO,OACxC,0BAAM7B,UAAU,aAAaoB,EAAKE,OAAOQ,MACzC,yBAAKM,wBAAyB,CAAEC,OAAQjB,EAAKkB,QAC7C,kBAAC9C,EAAD,CAAaC,KAAM2B,EAAKE,OAAO7B,OAC/B,kBAACU,EAAWiB,EAAKE,QACjB,kBAACR,EAAD,CAAcC,SAAUA,EAASwB,MAAOvB,YAAaI","file":"component---src-templates-post-js-6c29a7960effcf72e0a4.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { useScriptTag } from '../utils/dom';\n\nfunction TwitterPlug({ tags }) {\n  useScriptTag(\n    `!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');`\n  );\n\n  return (\n    <div style={{ marginTop: '2rem', marginBottom: '1rem' }}>\n      <a\n        href={`https://twitter.com/share?hashtags=${tags.join(',')}`}\n        className=\"twitter-share-button\"\n        data-via=\"_anmonteiro\"\n      >\n        Tweet\n      </a>\n      <a\n        href=\"https://twitter.com/_anmonteiro\"\n        className=\"twitter-follow-button\"\n        data-show-count=\"false\"\n      >\n        Follow @_anmonteiro\n      </a>\n    </div>\n  );\n}\n\nfunction Disqus({ url, slug }) {\n  const identifierParts = slug.split('/').filter(x => x !== '');\n  const identifier = identifierParts[identifierParts.length - 1].split('.')[0];\n  useScriptTag(`\n  var disqus_config = function () {\n      this.page.url = '${url}';\n      this.page.identifier = '${identifier}';\n  };\n  (function() {  // REQUIRED CONFIGURATION VARIABLE: EDIT THE SHORTNAME BELOW\n      var d = document, s = d.createElement('script');\n\n      s.src = '//anmonteiro.disqus.com/embed.js';  // IMPORTANT: Replace EXAMPLE with your forum shortname!\n\n      s.setAttribute('data-timestamp', +new Date());\n      (d.head || d.body).appendChild(s);\n  })();\n`);\n  return (\n    <div id=\"disqus_thread\">\n      <noscript>\n        Please enable JavaScript to view the{' '}\n        <a href=\"https://disqus.com/?ref_noscript\" rel=\"nofollow\">\n          comments powered by Disqus.\n        </a>\n      </noscript>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      html\n      fields {\n        title\n        date\n        tags\n        slug\n        url\n      }\n    }\n\n    allPosts: allMarkdownRemark(\n      sort: { fields: [fileAbsolutePath], order: DESC }\n      filter: { frontmatter: { layout: { eq: \"post\" } } }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          fields {\n            title\n            slug\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  const { allPosts } = data;\n  return (\n    <Layout>\n      <SEO pageData={post} />\n      <div className=\"post\">\n        <h1 className=\"post-title\">{post.fields.title}</h1>\n        <span className=\"post-date\">{post.fields.date}</span>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <TwitterPlug tags={post.fields.tags} />\n        <Disqus {...post.fields} />\n        <RelatedPosts allPosts={allPosts.edges} currentPost={post} />\n      </div>\n    </Layout>\n  );\n};\n\nfunction RelatedPosts({ allPosts, currentPost }) {\n  const relatedPosts = [];\n  const allPostsLength = allPosts.length;\n  for (let i = 0; i < allPostsLength; i++) {\n    if (relatedPosts.length === 3) {\n      break;\n    }\n    const post = allPosts[i].node;\n    const { tags } = post.fields;\n    if (tags.some(tag => currentPost.fields.tags.indexOf(tag) !== -1)) {\n      relatedPosts.push(post);\n    }\n  }\n\n  if (relatedPosts.length < 3) {\n    for (let i = 0; i < allPostsLength; i++) {\n      if (relatedPosts.length === 3) {\n        break;\n      }\n      const post = allPosts[i].node;\n      const { slug } = post.fields;\n      if (!relatedPosts.some(post => post.fields.slug === slug)) {\n        relatedPosts.push(post);\n      }\n    }\n  }\n\n  return (\n    <div className=\"related\">\n      <h2>Related Posts</h2>\n      <ul className=\"related-posts\">\n        {relatedPosts.map((post, idx) => {\n          const { title, slug, date } = post.fields;\n          return (\n            <li key={idx}>\n              <h3>\n                <Link to={slug}>\n                  {title} <small>{date}</small>\n                </Link>\n              </h3>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"sourceRoot":""}