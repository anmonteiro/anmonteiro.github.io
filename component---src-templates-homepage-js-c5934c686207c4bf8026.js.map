{"version":3,"sources":["webpack://anmonteiro.com/./src/templates/homepage.js"],"names":["NavLink","className","test","text","url","classes","classnames","to","data","pageContext","index","first","last","previousUrl","nextUrl","pageData","allMarkdownRemark","edges","map","idx","node","key","fields","slug","title","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"oMAOMA,EAAU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAClCC,EAAUC,IAAW,kBAAmBL,GAC9C,OAAKC,EAOI,0BAAMD,UAAWI,GAAUF,GALhC,kBAAC,KAAD,CAAMI,GAAIH,EAAKH,UAAWI,GACvBF,IAiCT,mBAAe,GAA4B,IAAzBK,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAChBC,EAAcH,EAAQ,GAAM,EAAI,GAAlB,QAA8BA,EAAQ,GACpDI,EAAO,QAAUJ,EAAQ,GAE/B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,SAAU,KACf,yBAAKd,UAAU,SACZO,EAAKQ,kBAAkBC,MAAMC,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKC,IAAKF,EAAKlB,UAAU,QACvB,wBAAIA,UAAU,cACZ,kBAAC,KAAD,CAAMM,GAAIa,EAAKE,OAAOC,KAAMtB,UAAU,cACnCmB,EAAKE,OAAOE,QAIjB,0BAAMvB,UAAU,aAAamB,EAAKE,OAAOG,MAEzC,yBAAKC,wBAAyB,CAAEC,OAAQP,EAAKQ,WAC7C,2BACE,kBAAC,KAAD,CAAMrB,GAAIa,EAAKE,OAAOC,KAAMtB,UAAU,cAAtC,sBAOR,yBAAKA,UAAU,cACb,kBAACD,EAAD,CAASE,KAAMU,EAAMR,IAAKU,EAASX,KAAK,QAAQF,UAAU,UAC1D,kBAACD,EAAD,CACEE,KAAMS,EACNP,IAAKS,EACLV,KAAK,QACLF,UAAU","file":"component---src-templates-homepage-js-c5934c686207c4bf8026.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport classnames from 'classnames';\n\nconst NavLink = ({ className, test, text, url }) => {\n  const classes = classnames('pagination-item', className);\n  if (!test) {\n    return (\n      <Link to={url} className={classes}>\n        {text}\n      </Link>\n    );\n  } else {\n    return <span className={classes}>{text}</span>;\n  }\n};\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [fileAbsolutePath], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            title\n            date\n            slug\n          }\n          excerpt(format: HTML)\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data, pageContext }) => {\n  const { index, first, last } = pageContext;\n  const previousUrl = index - 1 === 1 ? '' : `page${index - 1}`;\n  const nextUrl = `page${index + 1}`;\n\n  return (\n    <Layout>\n      <SEO pageData={{}} />\n      <div className='posts'>\n        {data.allMarkdownRemark.edges.map(({ node }, idx) => (\n          <div key={idx} className='post'>\n            <h1 className='post-title'>\n              <Link to={node.fields.slug} className='post-title'>\n                {node.fields.title}\n              </Link>\n            </h1>\n\n            <span className='post-date'>{node.fields.date}</span>\n\n            <div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            <p>\n              <Link to={node.fields.slug} className='post-title'>\n                Read more &nbsp;&#10137;\n              </Link>\n            </p>\n          </div>\n        ))}\n      </div>\n      <div className='pagination'>\n        <NavLink test={last} url={nextUrl} text='Older' className='older' />\n        <NavLink\n          test={first}\n          url={previousUrl}\n          text='Newer'\n          className='newer'\n        />\n      </div>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}